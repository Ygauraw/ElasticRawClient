apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

apply plugin: 'android-apt'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//apply plugin: 'jacoco-android'


//apply plugin: 'com.android.application'

// This is the library version used when deploying the artifact
version = "2.0.0-XMAS"

boolean isReleaseBuild = gradle.startParameter.taskNames.contains('bintrayUpload')
version = isReleaseBuild ? version : "$version-SNAPSHOT"
logger.info("elasticsearchrawclient is using version=$project.version")

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

//    productFlavors {
//        free {}
//        paid {}
//    }
    lintOptions {
        abortOnError false
    }
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 3
        versionName "2.0.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets { main { java.srcDirs = ['src/main/java'] } }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

def siteUrl = 'https://github.com/silverforge/ElasticRawClient'      // Homepage URL of the library
def gitUrl = 'https://github.com/silverforge/ElasticRawClient.git'   // Git repository URL
group = "com.silverforge.elastic"                                    // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'ElasticRawClient is a lightweight Elastic client for Android devs'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'silverforge'
                        name 'Janos Murvai-Gaal'
                        email 'janos.murvaigaal@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

dependencies {
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile fileTree(include: ['*.jar'], dir: 'libs')

    provided "org.projectlombok:lombok:1.16.4"
    apt "org.projectlombok:lombok:1.16.4"

    compile 'br.com.zbra:android-linq:1.0.1'

    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxjava:1.0.16'

    compile 'com.fasterxml.jackson.core:jackson-core:2.6.0-rc3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.0-rc3'

//    compile 'com.google.android.gms:play-services-maps:8.3.0'
//    compile 'com.google.maps.android:android-maps-utils:0.4'

    provided "com.github.rholder:guava-retrying:2.0.0"
    compile 'com.silverforge.net:webconnector:1.1.0@aar'

//    compile('com.silverforge.net:webconnector:1.0.0') {
//        exclude group: 'org.androidannotations', module : 'androidannotations'
//        exclude group: 'io.reactivex'
//        exclude group: 'com.github.rholder', module: 'guava-retrying'
//    }

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

if (isReleaseBuild) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintray.user = properties.getProperty("bintray.user")
    bintray.key = properties.getProperty("bintray.apikey")
}

bintray {
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "elastic-raw-client"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
//
//jacocoAndroidUnitTestReport {
//    excludes = ['**/R.class',
//                '**/R$*.class',
//                '**/BuildConfig.*',
//                '**/Manifest*.*']
//}